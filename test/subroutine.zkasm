start:

        3 => A
        2 => B

        :CALL(subroutine)             ; same as :JMP(RR)
        
        0 => A,B,D 
        5 => E     :ARITH

        4 => A
        8 => B

        zkPC+1 => RR :JMP(subroutine) ; same as CALL(subroutime)

        0 => A,B,D 
        12 => E     :ARITH

        :JMP(end)

subroutine:
        A+B => C
        :RETURN                       ; same as :JMP(RR)
       
end:
       0 => A,B,C,D,E,CTX, SP, PC, GAS, MAXMEM, SR                 ; Set all registers to 0

longLoop:
        STEP-0x10000+40  : JMPC(longLoop2)
                        : JMP(finalLoop)
longLoop2:
        0
        0
        0
        0       ; 4
        0
        0
        0
        0       ; 8
        0
        0
        0
        0       ; 12
        0
        0
        0
        0       ; 16
        0
        0
        0
        0       ; 20
        0
        0
        0
        0       ; 24
        0
        0
        0
        0       ; 28
        0
        0
        0
        0       : JMP(longLoop) ; 32


finalLoop:
        STEP-0x10000+2  : JMPC(finalLoop)

                         : JMP(start)

opINVALID: